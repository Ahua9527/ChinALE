"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var evergreen_ui__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! evergreen-ui */ \"(app-pages-browser)/./node_modules/evergreen-ui/esm/alert/src/Alert.js\");\n/* harmony import */ var evergreen_ui__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! evergreen-ui */ \"(app-pages-browser)/./node_modules/evergreen-ui/esm/scales/src/majorScale.js\");\n/* harmony import */ var evergreen_ui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! evergreen-ui */ \"(app-pages-browser)/./node_modules/evergreen-ui/esm/layers/src/Pane.js\");\n/* harmony import */ var evergreen_ui__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! evergreen-ui */ \"(app-pages-browser)/./node_modules/evergreen-ui/esm/typography/src/Heading.js\");\n/* harmony import */ var evergreen_ui__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! evergreen-ui */ \"(app-pages-browser)/./node_modules/evergreen-ui/esm/file-uploader/src/FileUploader.js\");\n/* harmony import */ var evergreen_ui__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! evergreen-ui */ \"(app-pages-browser)/./node_modules/evergreen-ui/esm/file-uploader/src/FileCard.js\");\n/* harmony import */ var evergreen_ui__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! evergreen-ui */ \"(app-pages-browser)/./node_modules/evergreen-ui/esm/buttons/src/Button.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_ale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/ale */ \"(app-pages-browser)/./src/utils/ale.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nfunction Home() {\n    _s();\n    // ===== 状态定义 =====\n    // 组件挂载状态\n    const [isMounted, setIsMounted] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // 文件列表\n    const [files, setFiles] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // 文件拒绝列表\n    const [fileRejections, setFileRejections] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // 处理状态\n    const [isProcessing, setIsProcessing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // 错误信息\n    const [errors, setErrors] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // ===== 辅助函数 =====\n    // 添加错误信息\n    const addError = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Home.useCallback[addError]\": (error)=>{\n            setErrors({\n                \"Home.useCallback[addError]\": (prev)=>[\n                        ...prev,\n                        error\n                    ]\n            }[\"Home.useCallback[addError]\"]);\n        }\n    }[\"Home.useCallback[addError]\"], []);\n    // ===== 生命周期 =====\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Home.useEffect\": ()=>{\n            setIsMounted(true);\n            // 组件卸载时清理文件对象\n            return ({\n                \"Home.useEffect\": ()=>{\n                    files.forEach({\n                        \"Home.useEffect\": (file)=>{\n                            URL.revokeObjectURL(URL.createObjectURL(file));\n                        }\n                    }[\"Home.useEffect\"]);\n                    setIsMounted(false);\n                }\n            })[\"Home.useEffect\"];\n        }\n    }[\"Home.useEffect\"], [\n        files\n    ]);\n    // 服务端渲染保护\n    if ( false || !isMounted) {\n        return null;\n    }\n    // ===== 事件处理函数 =====\n    // 处理文件接受\n    const handleAccepted = (acceptedFiles)=>{\n        // 过滤只接受 .ale 文件\n        const validFiles = acceptedFiles.filter((file)=>file.name.toLowerCase().endsWith('.ale'));\n        // 如果有无效文件，添加错误信息\n        const invalidFiles = acceptedFiles.filter((file)=>!file.name.toLowerCase().endsWith('.ale'));\n        if (invalidFiles.length > 0) {\n            setErrors((prev)=>[\n                    ...prev,\n                    ...invalidFiles.map((file)=>({\n                            type: 'upload',\n                            fileName: file.name,\n                            message: '仅支持 .ale 文件'\n                        }))\n                ]);\n        }\n        setFiles((prev)=>[\n                ...prev,\n                ...validFiles\n            ]);\n        setErrors([]);\n    };\n    // 处理文件拒绝\n    const handleRejected = (rejectedFiles)=>{\n        setFileRejections(rejectedFiles);\n        rejectedFiles.forEach((rejection)=>{\n            addError({\n                type: 'upload',\n                fileName: rejection.file.name,\n                message: rejection.message\n            });\n        });\n    };\n    // 处理文件移除\n    const handleRemove = (file)=>{\n        setFiles(files.filter((f)=>f !== file));\n        setFileRejections(fileRejections.filter((r)=>r.file !== file));\n        setErrors(errors.filter((e)=>e.fileName !== file.name));\n    };\n    // 处理文件处理\n    const handleProcess = async ()=>{\n        setIsProcessing(true);\n        setErrors([]);\n        try {\n            // 串行处理所有文件\n            const successfulFiles = [];\n            for (const file of files){\n                try {\n                    // 转换编码\n                    const blob = await _utils_ale__WEBPACK_IMPORTED_MODULE_2__.ALEConverter.convertToGBK(file);\n                    const url = URL.createObjectURL(blob);\n                    // 下载延迟\n                    await new Promise((resolve)=>setTimeout(resolve, 500));\n                    // 触发下载\n                    const a = document.createElement('a');\n                    a.href = url;\n                    a.download = file.name.replace('.ale', '_GBK.ale');\n                    document.body.appendChild(a);\n                    a.click();\n                    // 清理\n                    await new Promise((resolve)=>setTimeout(resolve, 500));\n                    document.body.removeChild(a);\n                    URL.revokeObjectURL(url);\n                    successfulFiles.push(file);\n                } catch (err) {\n                    addError({\n                        type: 'process',\n                        fileName: file.name,\n                        message: err instanceof Error ? err.message : '处理失败'\n                    });\n                }\n            }\n            // 移除处理成功的文件\n            setFiles((prev)=>prev.filter((f)=>!successfulFiles.includes(f)));\n        } catch (err) {\n            addError({\n                type: 'process',\n                fileName: 'batch',\n                message: err instanceof Error ? err.message : '批量处理失败'\n            });\n        } finally{\n            setIsProcessing(false);\n        }\n    };\n    // ===== 渲染错误提示 =====\n    const renderErrors = ()=>{\n        const errorsByType = {\n            upload: errors.filter((e)=>e.type === 'upload'),\n            process: errors.filter((e)=>e.type === 'process'),\n            download: errors.filter((e)=>e.type === 'download')\n        };\n        return Object.entries(errorsByType).map((param)=>{\n            let [type, typeErrors] = param;\n            if (typeErrors.length === 0) return null;\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(evergreen_ui__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                intent: \"danger\",\n                title: \"\".concat(type === 'upload' ? '上传' : type === 'process' ? '处理' : '下载', \"错误\"),\n                marginBottom: (0,evergreen_ui__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(2),\n                children: typeErrors.map((err)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            err.fileName,\n                            \": \",\n                            err.message\n                        ]\n                    }, err.fileName, true, {\n                        fileName: \"/Users/deakins/Documents/ALE2GBK-Converter/src/app/page.tsx\",\n                        lineNumber: 178,\n                        columnNumber: 13\n                    }, this))\n            }, type, false, {\n                fileName: \"/Users/deakins/Documents/ALE2GBK-Converter/src/app/page.tsx\",\n                lineNumber: 171,\n                columnNumber: 9\n            }, this);\n        });\n    };\n    // ===== 组件渲染 =====\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(evergreen_ui__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minHeight: \"100vh\",\n        padding: 16,\n        backgroundColor: \"white\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(evergreen_ui__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n            elevation: 1,\n            backgroundColor: \"white\",\n            padding: 32,\n            borderRadius: 8,\n            width: \"100%\",\n            maxWidth: 600,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(evergreen_ui__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                    size: 900,\n                    marginBottom: (0,evergreen_ui__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(4),\n                    textAlign: \"center\",\n                    children: \"ALE-GBK Converter\"\n                }, void 0, false, {\n                    fileName: \"/Users/deakins/Documents/ALE2GBK-Converter/src/app/page.tsx\",\n                    lineNumber: 204,\n                    columnNumber: 9\n                }, this),\n                renderErrors(),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(evergreen_ui__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                    label: \"上传 ALE 文件\",\n                    description: \"将文件拖放到此处或点击选择文件。仅支持 .ale 文件。\",\n                    maxSizeInBytes: 50 * 1024 ** 2,\n                    // Accept all files - filtering done in handleAccepted\n                    onAccepted: handleAccepted,\n                    onRejected: handleRejected,\n                    disabled: isProcessing,\n                    maxFiles: 10,\n                    marginBottom: (0,evergreen_ui__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(3)\n                }, void 0, false, {\n                    fileName: \"/Users/deakins/Documents/ALE2GBK-Converter/src/app/page.tsx\",\n                    lineNumber: 216,\n                    columnNumber: 9\n                }, this),\n                files.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(evergreen_ui__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                    marginY: (0,evergreen_ui__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(3),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(evergreen_ui__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                            size: 400,\n                            marginBottom: (0,evergreen_ui__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(2),\n                            children: \"已上传文件\"\n                        }, void 0, false, {\n                            fileName: \"/Users/deakins/Documents/ALE2GBK-Converter/src/app/page.tsx\",\n                            lineNumber: 231,\n                            columnNumber: 13\n                        }, this),\n                        files.map((file, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(evergreen_ui__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                name: file.name,\n                                sizeInBytes: file.size,\n                                onRemove: ()=>handleRemove(file),\n                                marginBottom: (0,evergreen_ui__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(1)\n                            }, \"\".concat(file.name, \"-\").concat(index), false, {\n                                fileName: \"/Users/deakins/Documents/ALE2GBK-Converter/src/app/page.tsx\",\n                                lineNumber: 235,\n                                columnNumber: 15\n                            }, this))\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/deakins/Documents/ALE2GBK-Converter/src/app/page.tsx\",\n                    lineNumber: 230,\n                    columnNumber: 11\n                }, this),\n                files.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(evergreen_ui__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                    appearance: \"primary\",\n                    intent: \"primary\",\n                    onClick: handleProcess,\n                    isLoading: isProcessing,\n                    disabled: isProcessing,\n                    width: \"100%\",\n                    height: 40,\n                    \"aria-label\": \"处理 \".concat(files.length, \" 个文件\"),\n                    children: isProcessing ? \"正在处理 \".concat(files.length, \" 个文件...\") : \"处理 \".concat(files.length, \" 个文件\")\n                }, void 0, false, {\n                    fileName: \"/Users/deakins/Documents/ALE2GBK-Converter/src/app/page.tsx\",\n                    lineNumber: 248,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/deakins/Documents/ALE2GBK-Converter/src/app/page.tsx\",\n            lineNumber: 195,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/deakins/Documents/ALE2GBK-Converter/src/app/page.tsx\",\n        lineNumber: 187,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"dp4bEtUlay2C4yxr+0qva7XdoNQ=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/utils/ale.ts":
/*!**************************!*\
  !*** ./src/utils/ale.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALEConverter: () => (/* binding */ ALEConverter)\n/* harmony export */ });\n/**\n * ALE (Avid Log Exchange) 文件编码转换工具\n */ class ALEConverter {\n    /**\n   * 将UTF-8编码的ALE文件内容转换为GB2312编码\n   * @param file - 要转换的File对象\n   * @returns 转换后的Blob对象\n   */ static async convertToGBK(file) {\n        try {\n            // 读取文件内容\n            const buffer = await file.arrayBuffer();\n            // 将UTF-8解码为字符串\n            const utf8Decoder = new TextDecoder('utf-8');\n            const text = utf8Decoder.decode(buffer);\n            // 解析ALE文件结构\n            const aleData = this.parseALEFile(text);\n            // 将数据转换为GB2312编码\n            const serializedText = this.serializeALEFile(aleData);\n            // 使用TextDecoder进行GB2312编码\n            const gbkBuffer = new Uint8Array(serializedText.length * 2);\n            let bufferIndex = 0;\n            for(let i = 0; i < serializedText.length; i++){\n                const charCode = serializedText.charCodeAt(i);\n                // 处理ASCII范围\n                if (charCode <= 0x7F) {\n                    gbkBuffer[bufferIndex++] = charCode;\n                } else {\n                    // 处理中文字符（GB2312双字节编码）\n                    const char = serializedText.charAt(i);\n                    const nextChar = serializedText.charAt(i + 1);\n                    if (charCode >= 0xA1 && charCode <= 0xF7 && nextChar && nextChar.charCodeAt(0) >= 0xA1 && nextChar.charCodeAt(0) <= 0xFE) {\n                        // GB2312双字节字符\n                        gbkBuffer[bufferIndex++] = charCode;\n                        gbkBuffer[bufferIndex++] = nextChar.charCodeAt(0);\n                        i++; // 跳过下一个字节\n                    } else {\n                        // 无法识别的字符，使用默认替换字符\n                        gbkBuffer[bufferIndex++] = 0x3F; // '?'\n                    }\n                }\n            }\n            // 截取实际使用的缓冲区\n            const finalBuffer = gbkBuffer.slice(0, bufferIndex);\n            return new Blob([\n                finalBuffer\n            ], {\n                type: 'text/plain;charset=gb2312'\n            });\n        } catch (error) {\n            throw new Error(\"ALE文件转换失败: \".concat(error instanceof Error ? error.message : '未知错误'));\n        }\n    }\n    /**\n   * 解析ALE文件内容\n   * @param text - ALE文件文本内容\n   * @returns 解析后的ALE文件对象\n   */ static parseALEFile(text) {\n        const lines = text.split('\\n').filter((line)=>line.trim() !== '');\n        // 解析头部\n        const header = lines[0];\n        // 解析列头\n        const columnHeaders = lines[1].split('\\t');\n        // 解析数据行\n        const data = lines.slice(2).map((line)=>line.split('\\t'));\n        return {\n            header,\n            columnHeaders,\n            data\n        };\n    }\n    /**\n   * 将ALE文件对象序列化为字符串\n   * @param aleData - ALE文件对象\n   * @returns 序列化后的字符串\n   */ static serializeALEFile(aleData) {\n        const lines = [\n            aleData.header,\n            aleData.columnHeaders.join('\\t'),\n            ...aleData.data.map((row)=>row.join('\\t'))\n        ];\n        return lines.join('\\n');\n    }\n    /**\n   * 验证ALE文件格式\n   * @param file - 要验证的文件\n   * @returns 是否是有效的ALE文件\n   */ static async validateALEFile(file) {\n        try {\n            const buffer = await file.arrayBuffer();\n            const text = new TextDecoder('utf-8').decode(buffer);\n            const lines = text.split('\\n').filter((line)=>line.trim() !== '');\n            // 基本格式验证\n            return lines.length >= 3 && lines[0].startsWith('FIELD_DELIM') && lines[1].split('\\t').length > 1;\n        } catch (e) {\n            return false;\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/ale.ts\n"));

/***/ })

});